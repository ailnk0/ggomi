<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PdfToOfficeApp"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Images/dlg_data_validate_check.xaml" />
    <ResourceDictionary Source="Images/dlg_data_validate_info.xaml" />
    <ResourceDictionary Source="Images/dlg_data_validate_question.xaml" />
    <ResourceDictionary Source="Images/dlg_data_validate_stop.xaml" />
    <ResourceDictionary Source="Images/dlg_data_validate_warning.xaml" />
    <ResourceDictionary Source="Images/lg_hpdftypedocument.xaml" />
    <ResourceDictionary Source="Images/lg_pdftodocxdlg.xaml" />
    <ResourceDictionary Source="Images/lg_pdftohwpdlg.xaml" />
    <ResourceDictionary Source="Images/lg_pdftoimagedlg.xaml" />
    <ResourceDictionary Source="Images/lg_pdftopptxdlg.xaml" />
    <ResourceDictionary Source="Images/lg_pdftoxlsxdlg.xaml" />
    <ResourceDictionary Source="Images/sm_add.xaml" />
    <ResourceDictionary Source="Images/sm_arrow_left.xaml" />
    <ResourceDictionary Source="Images/sm_arrow_right.xaml" />
    <ResourceDictionary Source="Images/sm_cancel.xaml" />
    <ResourceDictionary Source="Images/sm_check.xaml" />
    <ResourceDictionary Source="Images/sm_config.xaml" />
    <ResourceDictionary Source="Images/sm_dropdown.xaml" />
    <ResourceDictionary Source="Images/sm_fail.xaml" />
    <ResourceDictionary Source="Images/sm_menu.xaml" />
    <ResourceDictionary Source="Images/sm_offset_down.xaml" />
    <ResourceDictionary Source="Images/sm_offset_up.xaml" />
    <ResourceDictionary Source="Images/sm_r_add.xaml" />
    <ResourceDictionary Source="Images/sm_r_check.xaml" />
    <ResourceDictionary Source="Images/sm_r_run.xaml" />
    <ResourceDictionary Source="Images/sm_r_stop.xaml" />
    <ResourceDictionary Source="Images/sm_sub.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <local:ProgressToAngleConverter x:Key="ProgressConverter" />
  <local:DataConv x:Key="dataConv" />

  <DrawingImage x:Key="drawing_validate_check"
                Drawing="{DynamicResource dlg_data_validate_check}">
  </DrawingImage>
  <DrawingImage x:Key="drawing_validate_warning"
                Drawing="{DynamicResource dlg_data_validate_warning}">
  </DrawingImage>

  <!-- Colors -->
  <SolidColorBrush x:Key="Blue_100"
                   Color="#2367ff" />
  <SolidColorBrush x:Key="Red_100"
                   Color="#e13a1b" />
  <SolidColorBrush x:Key="Yellow_100"
                   Color="#eeaf0f" />
  <SolidColorBrush x:Key="Green_100"
                   Color="#168e12" />
  <SolidColorBrush x:Key="Gray_100"
                   Color="#000000" />
  <SolidColorBrush x:Key="Gray_60"
                   Color="#666666" />
  <SolidColorBrush x:Key="Gray_40"
                   Color="#999999" />
  <SolidColorBrush x:Key="Gray_20"
                   Color="#cccccc" />

  <SolidColorBrush x:Key="bg"
                   Color="White" />
  <SolidColorBrush x:Key="bg-mouseover"
                   Color="LightGray"
                   Opacity="0.5" />

  <Duration x:Key="ani-short">0:0:0.25</Duration>
  <Duration x:Key="ani-long">0:0:0.5</Duration>

  <Thickness x:Key="m-1">2.5</Thickness>
  <Thickness x:Key="m-2">5</Thickness>
  <Thickness x:Key="m-3">10</Thickness>
  <Thickness x:Key="m-4">15</Thickness>
  <Thickness x:Key="m-5">20</Thickness>

  <system:Double x:Key="sz-menu-i">30</system:Double>

  <system:Double x:Key="sz-btn-pri">60</system:Double>
  <Thickness x:Key="pad-btn">5</Thickness>
  <system:Double x:Key="opcity-btn">1</system:Double>
  <system:Double x:Key="opcity-btn-mouseover">0.8</system:Double>
  <system:Double x:Key="opcity-btn-disable">0.3</system:Double>
  <CornerRadius x:Key="round-btn">5</CornerRadius>

  <system:Double x:Key="sz-h-selformat">90</system:Double>

  <local:MainViewModel x:Key="main-vm" />

  <!-- Binding MainWindow.Status -->
  <Binding x:Key="app-status"
           Source="{StaticResource main-vm}"
           Path="AppStatus" />

  <Style TargetType="Border"
         x:Key="div-selformat">
    <Setter Property="Height"
            Value="0" />
    <Style.Triggers>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
        <DataTrigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="0"
                               Duration="{StaticResource ani-short}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="{StaticResource sz-h-selformat}"
                               Duration="{StaticResource ani-short}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.ExitActions>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
        <DataTrigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="{StaticResource sz-h-selformat}"
                               Duration="{StaticResource ani-short}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="0"
                               Duration="{StaticResource ani-short}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.ExitActions>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="menu"
         TargetType="{x:Type Menu}">
    <Setter Property="Width"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Height"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border>
            <StackPanel Orientation="Horizontal"
                        IsItemsHost="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="menu-i"
         TargetType="{x:Type MenuItem}">
    <Setter Property="Width"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Height"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="border"
                  CornerRadius="{StaticResource round-btn}">
            <Grid>
              <Border Padding="{StaticResource pad-btn}">
                <ContentPresenter ContentSource="Icon" />
              </Border>
              <Popup x:Name="Popup"
                     Placement="Bottom"
                     IsOpen="{TemplateBinding IsSubmenuOpen}"
                     AllowsTransparency="True"
                     PopupAnimation="Fade">
                <Border x:Name="SubmenuBorder"
                        CornerRadius="{StaticResource round-btn}"
                        Padding="{StaticResource m-1}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource Gray_20}"
                        Background="{StaticResource bg}">
                  <StackPanel IsItemsHost="True"
                              KeyboardNavigation.DirectionalNavigation="Cycle" />
                </Border>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
                     Value="True">
              <Setter TargetName="border"
                      Property="Background"
                      Value="{StaticResource bg-mouseover}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
              <Setter TargetName="border"
                      Property="Opacity"
                      Value="{StaticResource opcity-btn-disable}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btn-pri"
         TargetType="{x:Type Button}">
    <Setter Property="Width"
            Value="{StaticResource sz-btn-pri}" />
    <Setter Property="Height"
            Value="{StaticResource sz-btn-pri}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border x:Name="border"
                    Padding="{StaticResource pad-btn}"
                    CornerRadius="{StaticResource round-btn}">
              <ContentPresenter>
              </ContentPresenter>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="border"
                     Property="IsMouseOver"
                     Value="True">
              <Setter TargetName="border"
                      Property="Background"
                      Value="{StaticResource bg-mouseover}" />
            </Trigger>
            <Trigger SourceName="border"
                     Property="IsEnabled"
                     Value="False">
              <Setter TargetName="border"
                      Property="Opacity"
                      Value="{StaticResource opcity-btn-disable}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Opacity"
                               To="{StaticResource opcity-btn-mouseover}"
                               Duration="{StaticResource ani-short}" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Opacity"
                               To="{StaticResource opcity-btn}"
                               Duration="{StaticResource ani-short}" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="btn-pri-convert"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource btn-pri}">
    <Style.Triggers>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="btn-pri-reset"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource btn-pri}">
    <Style.Triggers>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="btn-pri-stop"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource btn-pri}">
    <Style.Triggers>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{StaticResource app-status}"
                   Value="{x:Static local:APP_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <!-- Style : image-conv-completed -->
  <Style TargetType="Image"
         x:Key="image-conv-completed">
    <Setter Property="Visibility"
            Value="Visible" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Opacity"
                  Value="{StaticResource opcity-btn-disable}" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.FAIL}">
        <DataTrigger.Setters>
          <Setter Property="Opacity"
                  Value="{StaticResource opcity-btn-disable}" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Opacity"
                  Value="{StaticResource opcity-btn-disable}" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <!-- Style : image-conv-result -->
  <Style TargetType="Image"
         x:Key="image-conv-result">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Source"
                  Value="{StaticResource drawing_validate_check}" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.FAIL}">
        <DataTrigger.Setters>
          <Setter Property="Source"
                  Value="{StaticResource drawing_validate_warning}" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <!-- Style : progressbar-circular -->
  <Style TargetType="ProgressBar"
         x:Key="progressbar-circular">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid>
            <Ellipse Height="15"
                     Width="15"
                     Fill="White"
                     Opacity="0.7">
            </Ellipse>
            <local:Arc StrokeThickness="5"
                       Stroke="{StaticResource Green_100}">
              <local:Arc.StartAngle>
                <MultiBinding Converter="{StaticResource ProgressConverter}">
                  <Binding Path="Minimum"
                           RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="."
                           RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </local:Arc.StartAngle>
              <local:Arc.EndAngle>
                <MultiBinding Converter="{StaticResource ProgressConverter}">
                  <Binding Path="Value"
                           RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="."
                           RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </local:Arc.EndAngle>
            </local:Arc>
            <TextBlock Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:0\}}"
                       Foreground="{StaticResource Green_100}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontSize="10" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Visibility"
            Value="Visible" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Hidden" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Hidden" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=ConvStatus}"
                   Value="{x:Static local:CONV_STATUS.FAIL}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Hidden" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <!-- doclistbox-item -->
  <DataTemplate x:Key="doclistbox-item">
    <Grid Width="100"
          Height="100"
          ToolTip="{Binding Path=Tooltip}">
      <Grid.RowDefinitions>
        <RowDefinition Height="2*" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Image Grid.Row="0"
             Width="50"
             Height="50"
             VerticalAlignment="Bottom"
             Style="{StaticResource image-conv-completed}">
        <Image.Source>
          <DrawingImage Drawing="{DynamicResource icon-hpdf}">
          </DrawingImage>
        </Image.Source>
      </Image>
      <ProgressBar Width="25"
                   Height="25"
                   Margin="0,20,0,0"
                   Value="{Binding Path=ProgressValue}"
                   Style="{StaticResource progressbar-circular}">
      </ProgressBar>
      <Image Margin="0,20,0,0"
             Height="25"
             Width="25"
             Style="{StaticResource image-conv-result}">
      </Image>
      <TextBlock Grid.Row="1"
                 Text="{Binding Path=FileName}"
                 TextWrapping="Wrap"
                 TextAlignment="Center"
                 VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>

  <!-- Style : local:DocListBox -->
  <Style TargetType="{x:Type local:DocListBox}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Disabled" />
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="ItemTemplate"
            Value="{StaticResource doclistbox-item}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <WrapPanel x:Name="doclist">
          </WrapPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="SelectionMode"
            Value="Multiple" />
  </Style>

</ResourceDictionary>
