<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PdfToOfficeApp"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../Images/dlg_data_validate_check.xaml" />
    <ResourceDictionary Source="../Images/dlg_data_validate_info.xaml" />
    <ResourceDictionary Source="../Images/dlg_data_validate_question.xaml" />
    <ResourceDictionary Source="../Images/dlg_data_validate_stop.xaml" />
    <ResourceDictionary Source="../Images/dlg_data_validate_warning.xaml" />
    <ResourceDictionary Source="../Images/lg_hpdftypedocument.xaml" />
    <ResourceDictionary Source="../Images/lg_pdftodocxdlg.xaml" />
    <ResourceDictionary Source="../Images/lg_pdftohwpdlg.xaml" />
    <ResourceDictionary Source="../Images/lg_pdftoimagedlg.xaml" />
    <ResourceDictionary Source="../Images/lg_pdftopptxdlg.xaml" />
    <ResourceDictionary Source="../Images/lg_pdftoxlsxdlg.xaml" />
    <ResourceDictionary Source="../Images/sm_add.xaml" />
    <ResourceDictionary Source="../Images/sm_arrow_left.xaml" />
    <ResourceDictionary Source="../Images/sm_arrow_right.xaml" />
    <ResourceDictionary Source="../Images/sm_cancel.xaml" />
    <ResourceDictionary Source="../Images/sm_check.xaml" />
    <ResourceDictionary Source="../Images/sm_config.xaml" />
    <ResourceDictionary Source="../Images/sm_dropdown.xaml" />
    <ResourceDictionary Source="../Images/sm_fail.xaml" />
    <ResourceDictionary Source="../Images/sm_menu.xaml" />
    <ResourceDictionary Source="../Images/sm_offset_down.xaml" />
    <ResourceDictionary Source="../Images/sm_offset_up.xaml" />
    <ResourceDictionary Source="../Images/sm_opendlg.xaml" />
    <ResourceDictionary Source="../Images/sm_r_add.xaml" />
    <ResourceDictionary Source="../Images/sm_r_check.xaml" />
    <ResourceDictionary Source="../Images/sm_r_run.xaml" />
    <ResourceDictionary Source="../Images/sm_r_stop.xaml" />
    <ResourceDictionary Source="../Images/sm_sub.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <local:ProgressToAngleConverter x:Key="ProgressConverter" />
  <local:DataConv x:Key="dataConv" />

  <DrawingImage x:Key="drawing_validate_check"
                Drawing="{DynamicResource dlg_data_validate_check}">
  </DrawingImage>
  <DrawingImage x:Key="drawing_validate_warning"
                Drawing="{DynamicResource dlg_data_validate_warning}">
  </DrawingImage>

  <!-- Colors -->
  <Color x:Key="icon-red">#e13a1b</Color>
  <Color x:Key="icon-green">#168e12</Color>
  <Color x:Key="icon-blue">#2367ff</Color>
  <Color x:Key="icon-yellow">#eeaf0f</Color>
  <Color x:Key="icon-content">#000000</Color>
  <Color x:Key="icon-bg">#ffffff</Color>

  <SolidColorBrush x:Key="Blue_100"
                   Color="{DynamicResource icon-blue}"
                   Opacity="1.0" />
  <SolidColorBrush x:Key="Red_100"
                   Color="{DynamicResource icon-red}"
                   Opacity="1.0" />
  <SolidColorBrush x:Key="Yellow_100"
                   Color="{DynamicResource icon-yellow}"
                   Opacity="1.0" />
  <SolidColorBrush x:Key="Yellow_30"
                   Color="{DynamicResource icon-yellow}"
                   Opacity="0.3" />
  <SolidColorBrush x:Key="Green_100"
                   Color="{DynamicResource icon-green}"
                   Opacity="1.0" />
  <SolidColorBrush x:Key="Gray_100"
                   Color="{DynamicResource icon-content}"
                   Opacity="1.0" />
  <SolidColorBrush x:Key="Gray_60"
                   Color="{DynamicResource icon-content}"
                   Opacity="0.6" />
  <SolidColorBrush x:Key="Gray_40"
                   Color="{DynamicResource icon-content}"
                   Opacity="0.4" />
  <SolidColorBrush x:Key="Gray_20"
                   Color="{DynamicResource icon-content}"
                   Opacity="0.2" />
  <SolidColorBrush x:Key="bg"
                   Color="{DynamicResource icon-bg}"
                   Opacity="1" />
  <SolidColorBrush x:Key="bg-mouseover"
                   Color="{DynamicResource icon-content}"
                   Opacity="0.1" />

  <Duration x:Key="ani-short">0:0:0.1</Duration>
  <Duration x:Key="ani-long">0:0:0.25</Duration>

  <Thickness x:Key="m-1">2.5</Thickness>
  <Thickness x:Key="m-2">5</Thickness>
  <Thickness x:Key="m-3">10</Thickness>
  <Thickness x:Key="m-4">15</Thickness>
  <Thickness x:Key="m-5">20</Thickness>

  <Thickness x:Key="mx-2"
             Left="5"
             Top="0"
             Right="5"
             Bottom="0" />

  <system:Double x:Key="sz-menu-i">30</system:Double>
  <system:Double x:Key="sz-btn-pri">60</system:Double>
  <Thickness x:Key="pad-btn">5</Thickness>
  <system:Double x:Key="opcity-btn">1</system:Double>
  <system:Double x:Key="opcity-btn-disable">0.3</system:Double>
  <CornerRadius x:Key="round-btn">5</CornerRadius>
  <system:Double x:Key="sz-w-check-slide">40</system:Double>
  <system:Double x:Key="sz-h-check-slide">20</system:Double>
  <CornerRadius x:Key="round-check-slide">10</CornerRadius>
  <system:Double x:Key="sz-check-slide-btn">18</system:Double>

  <Thickness x:Key="off-pos-check-slide"
             Left="1"
             Top="1"
             Right="21"
             Bottom="1" />
  <Thickness x:Key="on-pos-check-slide"
             Left="21"
             Top="1"
             Right="1"
             Bottom="1" />

  <system:Double x:Key="sz-h-selformat">90</system:Double>

  <local:MainViewModel x:Key="main-vm" />

  <Style TargetType="Border"
         x:Key="div-selformat">
    <Setter Property="Height"
            Value="0" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
        <DataTrigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="0"
                               Duration="{StaticResource ani-long}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="{StaticResource sz-h-selformat}"
                               Duration="{StaticResource ani-long}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.ExitActions>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
        <DataTrigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="{StaticResource sz-h-selformat}"
                               Duration="{StaticResource ani-long}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.EnterActions>
        <DataTrigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="Height"
                               To="0"
                               Duration="{StaticResource ani-long}" />
            </Storyboard>
          </BeginStoryboard>
        </DataTrigger.ExitActions>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="menu"
         TargetType="{x:Type Menu}">
    <Setter Property="Width"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Height"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border>
            <StackPanel Orientation="Horizontal"
                        IsItemsHost="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="menu-i"
         TargetType="{x:Type MenuItem}">
    <Setter Property="Width"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Height"
            Value="{StaticResource sz-menu-i}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="border"
                  CornerRadius="{StaticResource round-btn}">
            <Grid>
              <Border Padding="{StaticResource pad-btn}">
                <ContentPresenter ContentSource="Icon" />
              </Border>
              <Popup x:Name="Popup"
                     Placement="Bottom"
                     IsOpen="{TemplateBinding IsSubmenuOpen}"
                     AllowsTransparency="True"
                     PopupAnimation="Fade">
                <Border x:Name="SubmenuBorder"
                        CornerRadius="{StaticResource round-btn}"
                        Padding="{StaticResource m-1}"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource Gray_20}"
                        Background="{DynamicResource bg}">
                  <StackPanel IsItemsHost="True"
                              KeyboardNavigation.DirectionalNavigation="Cycle" />
                </Border>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
                     Value="True">
              <Setter TargetName="border"
                      Property="Background"
                      Value="{DynamicResource bg-mouseover}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
              <Setter TargetName="border"
                      Property="Opacity"
                      Value="{StaticResource opcity-btn-disable}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="menu-i-sub"
         TargetType="{x:Type MenuItem}">
    <Setter Property="Foreground"
            Value="{DynamicResource Gray_100}" />
  </Style>

  <Style x:Key="btn-pri"
         TargetType="{x:Type Button}">
    <Setter Property="Width"
            Value="{StaticResource sz-btn-pri}" />
    <Setter Property="Height"
            Value="{StaticResource sz-btn-pri}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border x:Name="border"
                    Padding="{StaticResource pad-btn}"
                    CornerRadius="{StaticResource round-btn}">
              <ContentPresenter>
              </ContentPresenter>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="border"
                     Property="IsMouseOver"
                     Value="True">
              <Setter TargetName="border"
                      Property="Background"
                      Value="{DynamicResource bg-mouseover}" />
            </Trigger>
            <Trigger SourceName="border"
                     Property="IsEnabled"
                     Value="False">
              <Setter TargetName="border"
                      Property="Opacity"
                      Value="{StaticResource opcity-btn-disable}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="btn-pri-convert"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource btn-pri}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="btn-pri-reset"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource btn-pri}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="btn-pri-stop"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource btn-pri}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.INIT}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.READY}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.RUNNING}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Visible" />
        </DataTrigger.Setters>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=AppStatus}"
                   Value="{x:Static local:APP_STATUS.COMPLETED}">
        <DataTrigger.Setters>
          <Setter Property="Visibility"
                  Value="Collapsed" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="check-slide"
         TargetType="{x:Type CheckBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto" />
              <ColumnDefinition />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="1"
                              VerticalAlignment="Center" />
            <Border x:Name="PART_Bg"
                    Grid.Column="3"
                    VerticalAlignment="Center"
                    Height="{StaticResource sz-h-check-slide}"
                    Width="{StaticResource sz-w-check-slide}"
                    CornerRadius="{StaticResource round-check-slide}"
                    Background="{DynamicResource Gray_40}">
              <Grid>
                <Ellipse x:Name="PART_Btn"
                         Fill="{DynamicResource bg}"
                         Margin="{StaticResource off-pos-check-slide}"
                         Width="{StaticResource sz-check-slide-btn}" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
              <Setter TargetName="PART_Bg"
                      Property="Background"
                      Value="{StaticResource Red_100}" />
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <ThicknessAnimation Storyboard.TargetName="PART_Btn"
                                        Storyboard.TargetProperty="Margin"
                                        To="{StaticResource on-pos-check-slide}"
                                        Duration="{StaticResource ani-short}" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <ThicknessAnimation Storyboard.TargetName="PART_Btn"
                                        Storyboard.TargetProperty="Margin"
                                        To="{StaticResource off-pos-check-slide}"
                                        Duration="{StaticResource ani-short}" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
